SECCIÓN 16: FORMULARIOS - TEMPLETES Y LAZYLOAD
20 CLASES - 2 H 19 MIN
Video 228. Introducción a la sección - 03:03
Video resumen de lo que veremos en esta sección donde muestra los alcances y como relacionaremos los formularios

Video 229. Temas puntuales de la sección - 00:20
Imagen con texto que resume lo dicho en el video anterior.

Video 230. Inicio de la sección - Formularios - 04:05
Ng new 06formulariosApp

Realizamos la instalación del nuevo proyecto, instalamos el CSS de Bootstrap y desplegamos la app para continuar en el siguiente video.

Video 231. Creación de módulos necesarios - 09:04
Creando la primera parte de la infraestructura. Se crean módulos con —routing para generar archivos configurados sin la necesidad de tener que hacer tanto código y así poder trabajar directamente en una aplicación.

Video 232. Componentes y LazyLoad de formularios - 10:05
Realizando las rutas de la aplicación con sus respectivos componentes.

Video 233. SideMenu - 07:12
Se realizan los componentes necesarios para poder renderizar un Sidebar adhoc para la aplicación.

Video 234. Template: Diseño del formulario básico - 08:31
Se especifica la diferencia entre Formulario por template y reactivo.

Template: Se ejecuta a partir del HTML. O sea, Mucho HTML y poco TS. (Para apps mas sencillas)
Reactivo: Se ejecuta a partir del TS. O sea, Mucho TS y poco HTML. (Para apps con más control)

En el video realizamos un formulario básico para Template>Básicos

Video 235. Template: FormsModule - 10:42
Importamos el FormsModule directamente en el template.module para permitir que Angular tome el control del formulario y asi no se este refrescando el formulario cada vez que apretamos el botón. Realizamos la primera funcionalidad para disparar la app al momento de apretar el botón. Hay ciertos problemas con respecto al manejo por Formularios y lo muestra en los últimos minutos del video, como por ejemplo el que sea un campo requerido o incluso si se necesita una validación de números.

Video 236. Template: Mostrar mensajes de error - 09:00
Realizamos validación para poder enviar el formulación como corresponde. Hay una modificación al usar Angular13 con respecto a lo que se ve en el video.

Video 237. ViewChild - 05:00
Se hará una optimización de la validación anterior. Se utiliza el decorador ViewChild para poder traer la información de la referencia local para luego utilizarla en el resto del .ts.

Video 238. Template: Validar número igual mayor a 0 - 06:53
Se realiza tarea para realizar validación de un número. Parecido al video anterior, utilizando el input de precio.

Video 239. Directivas personalizadas - CustomMin - Opcional - 13:57
Se realiza por primera vez una directiva para personalizar un input. Se trabaja con un nuevo archivo en la carpeta “directives”.

Video 240. Template: Limpiar el formulario - 05:44
En la función guardar al final de todo el código al cierre de los {} se resetea el formulario con resetForm.

Video 241. Template: Formularios dinámicos y arreglos - 11:18
HTML base para trabajar en Template Dinámicos. Realizamos de tarea la validación del botón guardar. Se realiza una input para ir agregando de forma dinámica nueva información. Se termina el próximo video. Lo dinámico del formulario es que más adelante le agregamos un ngFor para poder ir observando cada elemento que vamos agregando al formulario ANTES de enviar el formulario completo.

Video 242. Agregar elementos de forma dinámica - 07:05
*Importante*

Video 243. Eliminar elemento creado de forma dinámica - 02:44
Agregamos un botón a los inputs con la información y se le agrega la funcionalidad de eliminar usando sílice en el TS.

Video 244. Agregar juegos favoritos - 06:11
Agregamos funcionalidad para incluir nuevos favoritos.

Video 245. Template: Radio, Check y Switches - 08:55
Armando el HTML para utilizar los 3 componentes de Bootstrap.

Video 246. Template: Validando Radios, Checks y Switches - 09:15
Validaciones a los 3 componentes.

Video 247. Código fuente de la sección - 00:18
Descarga del código hecho durante el curso.




SECCIÓN 17: FORMULARIOS REACTIVOS
16 CLASES - 1 H 47 MIN
Video 248. Introducción a la sección - 02:00
Resumen de lo que se vera en esta sección. Seguimos trabajando en la app de la sección anterior, pero esta vez, trabajando con formularios reactivos (lógicamente en el TS)

Video 249. Temas puntuales de la sección - 00:30
Resumen escrito de los temas a ver.

Video 250. Continuación de proyecto - Formularios - 08:58
Copiamos el mismo código hecho en el HTML de la sección anterior sin llevarnos el TS. Eliminamos los errores y dejamos funcional la aplicación para continuar en el próximo video.

Video 251. Primeros pasos en formularios reactivos - 06:45
Importamos el ReactiveFormModule en reactive.module.ts. Se recomienda usar un solo tipo de formulario. Comenzamos a asignar atributos en el HTML para que el TS entienda que input estará a cargo de cada variable que tendrá el FormGroup.

Video 252. FormBuilder - 05:44
Utilizamos FormBuilder cuando vemos que el formulario es más grande de lo que pensábamos, y para evitar redundancias de poner FormAlgo en cada una de las variables asignadas en el formulario, usamos este servicio que lo trabajamos en el constructor.

Video 253. Validaciones básicas - Forms Validator - 06:31
Se trabaja con las validaciones mínimas del formulario trabajando en el TS.

Video 254. Mostrar mensajes de error - 07:12
Se genera la validación en TS.

Video 255. Submit del formulario - 07:32
Forma alternativa a deshabilitar el botón y permitir hacer click en el pero desplegando los errores donde los hay. Se agrega en la función el reseteo de la información en el formulario una vez apretado el botón.

Video 256. Tarea: Validar un nuevo campo - 08:45
Validaciones varias.

Video 257. FormArray - 10:50
Para agregar nuevos favoritos y usar el input dinámico del formulario.

Video 258. Agregar controles al FormArray - 11:00
Continuación del video anterior.

Video 259. Eliminar elementos de un FormArray - 04:04
Borrar un favorito de la parte del formulario dinamico.

Video 260. Formularios Reactivos: Switches - 12:14
Realizamos las validaciones correspondientes en Switches, queda pendiente información para el próximo video.

Video 261. Actualizar el valor de la persona - 08:13
Recordemos que en el video anterior hicimos reactivo el formulario pero no enviamos la información de la persona. Aquí completamos el ciclo y enviamos la información al apretar el botón “Guardar”. En el minuto 2:00 aproximadamente hace referencia del motivo para de diferencia entre botón normal y de tipo “Submit” y es dependiendo si hay 1 o muchos formularios en pantalla.

3:30 habla sobre como hacer reactivo el cambio de valores de una persona y no que cambie exclusivamente cuando se envía el formulario.

Video 262. Documentación de formularios reactivos en Angular - 06:05
Revisamos la pagina de Angular (www.angular.io)

Video 263. Código fuente de la sección - 00:10
Link para descargar código de la sección.



SECCIÓN 18: FORMULARIOS: VALIDACIONES MANUALES Y ASÍNCRONAS
16 CLASES - 1 H 36 MIN
Video 264. Inicio de sección - 01:43
Continuamos con el ejercicio de la sección anterior. Resumen de lo que haremos en esta donde haremos validaciones personalizadas (como 2 contraseñas iguales) y validaciones asíncronas.

Video 265. Temas puntuales de la sección - 00:25
Texto resumen con lo que se dijo anteriormente.

Video 266. Continuación de proyecto - 05:30
Se deja una tarea en donde se pide realizar el enrutamiento a los nuevos módulos y componentes nuevos para realizar esta sección con registro y login.

Video 267. Resolución de la tarea - Ruta y LazyLoad - 05:42
Se realiza la tarea del video anterior.

Video 268. Diseño de la pantalla de registro - 06:24
Se realiza el diseño de un formulario tipo para realizar validaciones para un registro de usuario en una pagina.

Video 269. Validar contra una expresión regular - 10:57
Expresión regular se refiere para asegurarse de que un string cumpla y tenga ciertos caracteres especiales para poder introducirlo.

Video 270. Evaluar un email - 03:59
Se usa una nueva expresión regular para definir el formato de email. Ojo que Validators tiene una validación de correo pero no es muy precisa.

Video 271. Validaciones personalizadas - 08:04
Se hace la validación a una palabra en particular. Puede que sea mas extensivo mas adelante. Puntualmente es para el input de username (para que no existan usuarios con el mismo nombre).

Video 272. Separar la lógica de validaciones del componente - 09:17
Factorizamos las validaciones para que puedan ser reutilzadas y no caer en errores de principios de programación. Se realiza un nuevo folder en “Shared” para compartirlo de forma global en el programa, aun que también se muestra una forma de compartirlo de forma mas especifico en algunos bloques de código. La otra forma, es generarse un servicio. IMPORTANTE

Video 273. Validar contraseñas iguales - 13:11
IMPORTANTE: Se realiza una validación para que la contraseña reingresada sea exactamente igual que la que se ingreso anteriormente. 

***No me resulta como corresponde al intentar hacerlo con una validación global***.

Video 274. Preparaciones para Validaciones Asíncronas - 04:40
Dejamos funcionando el JSON-Server y se revisa la información que trae un recurso descargable. Se hacen consultas y vemos donde se generan errores y donde no. Ahora tenemos un mini Backend para trabajar.

Video 275. Validaciones asíncronas - 10:06
Comenzamos a trabajar con el 3er argumento del FormGroup, Validaciones Asíncronas.

Video 276. Estado del formulario - 04:35
“Conceptual” del como se encuentra el formulario.

Video 277. Errores personalizados - 05:00
Solucionamos el problema del tipo de error que debe entregar en pantalla. En este caso para email usando 3 alternativas: “correo obligatorio”, “No es un correo” y “El correo esta en uso”. El problema de este video es que tiene mucha lógica en el HTML, algo que se solucionará en el próximo video.

Video 278. Mensaje de error personalizado - 06:26
Se realiza una optimización del código y se traspasa parte de la lógica implementada en el HTML al TS.

Video 279. Código fuente de la sección - 00:12
Descarga del código de esta sección.